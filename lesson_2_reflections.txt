O que acontece ao iniciar um repositório? Por que você precisa fazer isso?
	Ao criar um repositório no GitHub, você está criando uma pasta oculta .git no diretório escolhido. Pois assim se tem o controle de versão dos arquivos que foram alterados.

Em que se difere a área de preparação do diretório de trabalho e do repositório? Qual valor você acha que ela oferece?
	A área de preparação é usada para mostrar quais mudanças serão feitas no novo git commit. Tem um grande valor, pois assim se tem um grande controle de versão.

Como você pode usar a área de preparação para garantir que tenha um commit por alteração lógica?
	A área de preparação é usada dessa forma ao criar um "commit temporário", assim é possível commitar mudanças que são de fato pertinentes ao projeto, mas ainda mantém uma versão recente dalva, por segurança.

Quais são algumas das situações em que branches seriam úteis para manter seu histórico organizado? Como branches ajudariam?
	Os branches podem ser úteis quando deseja separar seu programa em diferentes vertentes, onde cada uma implemtenta algo no projeto mas não se tem certeza do funcionamento. Assim os branches mantem o programa mais organizado e fácil de ser corrigido. 

Como os diagramas ajudam a visualizar a estrutura de branches?
	Os diagramas ajudam a entender e visualizar melhor a organização dos branches.

Qual é o resultado da mesclagem de dois branches? Por que o representamos no diagrama dessa forma?
	Mesclando dois branches, ele junta as mudanças feitas em cada um deles.

Quais são os prós e contras da mesclagem automática do Git v. sempre fazer mesclagens manualmente?
	O lado positivo é que se poupa tempo ao mesclar automaticamente e é possivel ver todas as alterações feitas. O contra é que não se tem um controle efetivo das alterações, podendo perder partes importantes do programa.
